#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace X.App.Com
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="yt.gis")]
	public partial class DBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void Insertx_block(x_block instance);
    partial void Updatex_block(x_block instance);
    partial void Deletex_block(x_block instance);
    partial void Insertx_dict(x_dict instance);
    partial void Updatex_dict(x_dict instance);
    partial void Deletex_dict(x_dict instance);
    partial void Insertx_layer(x_layer instance);
    partial void Updatex_layer(x_layer instance);
    partial void Deletex_layer(x_layer instance);
    partial void Insertx_service(x_service instance);
    partial void Updatex_service(x_service instance);
    partial void Deletex_service(x_service instance);
    partial void Insertx_grid(x_grid instance);
    partial void Updatex_grid(x_grid instance);
    partial void Deletex_grid(x_grid instance);
    #endregion
		
		public DBDataContext() : 
				base(global::X.App.Properties.Settings.Default.x_linkConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<x_block> x_block
		{
			get
			{
				return this.GetTable<x_block>();
			}
		}
		
		public System.Data.Linq.Table<x_dict> x_dict
		{
			get
			{
				return this.GetTable<x_dict>();
			}
		}
		
		public System.Data.Linq.Table<x_layer> x_layer
		{
			get
			{
				return this.GetTable<x_layer>();
			}
		}
		
		public System.Data.Linq.Table<x_service> x_service
		{
			get
			{
				return this.GetTable<x_service>();
			}
		}
		
		public System.Data.Linq.Table<x_grid> x_grid
		{
			get
			{
				return this.GetTable<x_grid>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.x_block")]
	public partial class x_block : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _block_id;
		
		private System.Nullable<long> _service_id;
		
		private System.Nullable<int> _level;
		
		private string _file;
		
		private System.Nullable<int> _x;
		
		private System.Nullable<int> _y;
		
		private System.Nullable<int> _width;
		
		private System.Nullable<int> _height;
		
		private EntityRef<x_service> _x_service;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onblock_idChanging(long value);
    partial void Onblock_idChanged();
    partial void Onservice_idChanging(System.Nullable<long> value);
    partial void Onservice_idChanged();
    partial void OnlevelChanging(System.Nullable<int> value);
    partial void OnlevelChanged();
    partial void OnfileChanging(string value);
    partial void OnfileChanged();
    partial void OnxChanging(System.Nullable<int> value);
    partial void OnxChanged();
    partial void OnyChanging(System.Nullable<int> value);
    partial void OnyChanged();
    partial void OnwidthChanging(System.Nullable<int> value);
    partial void OnwidthChanged();
    partial void OnheightChanging(System.Nullable<int> value);
    partial void OnheightChanged();
    #endregion
		
		public x_block()
		{
			this._x_service = default(EntityRef<x_service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_block_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long block_id
		{
			get
			{
				return this._block_id;
			}
			set
			{
				if ((this._block_id != value))
				{
					this.Onblock_idChanging(value);
					this.SendPropertyChanging();
					this._block_id = value;
					this.SendPropertyChanged("block_id");
					this.Onblock_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_service_id", DbType="BigInt")]
		public System.Nullable<long> service_id
		{
			get
			{
				return this._service_id;
			}
			set
			{
				if ((this._service_id != value))
				{
					if (this._x_service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onservice_idChanging(value);
					this.SendPropertyChanging();
					this._service_id = value;
					this.SendPropertyChanged("service_id");
					this.Onservice_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[level]", Storage="_level", DbType="Int")]
		public System.Nullable<int> level
		{
			get
			{
				return this._level;
			}
			set
			{
				if ((this._level != value))
				{
					this.OnlevelChanging(value);
					this.SendPropertyChanging();
					this._level = value;
					this.SendPropertyChanged("level");
					this.OnlevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[file]", Storage="_file", DbType="NVarChar(100)")]
		public string file
		{
			get
			{
				return this._file;
			}
			set
			{
				if ((this._file != value))
				{
					this.OnfileChanging(value);
					this.SendPropertyChanging();
					this._file = value;
					this.SendPropertyChanged("file");
					this.OnfileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_x", DbType="Int")]
		public System.Nullable<int> x
		{
			get
			{
				return this._x;
			}
			set
			{
				if ((this._x != value))
				{
					this.OnxChanging(value);
					this.SendPropertyChanging();
					this._x = value;
					this.SendPropertyChanged("x");
					this.OnxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_y", DbType="Int")]
		public System.Nullable<int> y
		{
			get
			{
				return this._y;
			}
			set
			{
				if ((this._y != value))
				{
					this.OnyChanging(value);
					this.SendPropertyChanging();
					this._y = value;
					this.SendPropertyChanged("y");
					this.OnyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_width", DbType="Int")]
		public System.Nullable<int> width
		{
			get
			{
				return this._width;
			}
			set
			{
				if ((this._width != value))
				{
					this.OnwidthChanging(value);
					this.SendPropertyChanging();
					this._width = value;
					this.SendPropertyChanged("width");
					this.OnwidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_height", DbType="Int")]
		public System.Nullable<int> height
		{
			get
			{
				return this._height;
			}
			set
			{
				if ((this._height != value))
				{
					this.OnheightChanging(value);
					this.SendPropertyChanging();
					this._height = value;
					this.SendPropertyChanged("height");
					this.OnheightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="x_service_x_block", Storage="_x_service", ThisKey="service_id", OtherKey="service_id", IsForeignKey=true)]
		public x_service x_service
		{
			get
			{
				return this._x_service.Entity;
			}
			set
			{
				x_service previousValue = this._x_service.Entity;
				if (((previousValue != value) 
							|| (this._x_service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._x_service.Entity = null;
						previousValue.x_block.Remove(this);
					}
					this._x_service.Entity = value;
					if ((value != null))
					{
						value.x_block.Add(this);
						this._service_id = value.service_id;
					}
					else
					{
						this._service_id = default(Nullable<long>);
					}
					this.SendPropertyChanged("x_service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.x_dict")]
	public partial class x_dict : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _dict_id;
		
		private string _code;
		
		private string _img;
		
		private string _name;
		
		private string _jp;
		
		private string _upval;
		
		private string _value;
		
		private System.Nullable<int> _sort;
		
		private string _f1;
		
		private string _f2;
		
		private System.Nullable<int> _f3;
		
		private System.Nullable<int> _f4;
		
		private System.Nullable<int> _f5;
		
		private System.Nullable<int> _f6;
		
		private System.Nullable<int> _f7;
		
		private System.Nullable<int> _f8;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondict_idChanging(long value);
    partial void Ondict_idChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnimgChanging(string value);
    partial void OnimgChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnjpChanging(string value);
    partial void OnjpChanged();
    partial void OnupvalChanging(string value);
    partial void OnupvalChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    partial void OnsortChanging(System.Nullable<int> value);
    partial void OnsortChanged();
    partial void Onf1Changing(string value);
    partial void Onf1Changed();
    partial void Onf2Changing(string value);
    partial void Onf2Changed();
    partial void Onf3Changing(System.Nullable<int> value);
    partial void Onf3Changed();
    partial void Onf4Changing(System.Nullable<int> value);
    partial void Onf4Changed();
    partial void Onf5Changing(System.Nullable<int> value);
    partial void Onf5Changed();
    partial void Onf6Changing(System.Nullable<int> value);
    partial void Onf6Changed();
    partial void Onf7Changing(System.Nullable<int> value);
    partial void Onf7Changed();
    partial void Onf8Changing(System.Nullable<int> value);
    partial void Onf8Changed();
    #endregion
		
		public x_dict()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dict_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long dict_id
		{
			get
			{
				return this._dict_id;
			}
			set
			{
				if ((this._dict_id != value))
				{
					this.Ondict_idChanging(value);
					this.SendPropertyChanging();
					this._dict_id = value;
					this.SendPropertyChanged("dict_id");
					this.Ondict_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="NVarChar(20)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_img", DbType="NVarChar(200)")]
		public string img
		{
			get
			{
				return this._img;
			}
			set
			{
				if ((this._img != value))
				{
					this.OnimgChanging(value);
					this.SendPropertyChanging();
					this._img = value;
					this.SendPropertyChanged("img");
					this.OnimgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jp", DbType="NVarChar(50)")]
		public string jp
		{
			get
			{
				return this._jp;
			}
			set
			{
				if ((this._jp != value))
				{
					this.OnjpChanging(value);
					this.SendPropertyChanging();
					this._jp = value;
					this.SendPropertyChanged("jp");
					this.OnjpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_upval", DbType="NVarChar(10)")]
		public string upval
		{
			get
			{
				return this._upval;
			}
			set
			{
				if ((this._upval != value))
				{
					this.OnupvalChanging(value);
					this.SendPropertyChanging();
					this._upval = value;
					this.SendPropertyChanged("upval");
					this.OnupvalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="NVarChar(100)")]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sort", DbType="Int")]
		public System.Nullable<int> sort
		{
			get
			{
				return this._sort;
			}
			set
			{
				if ((this._sort != value))
				{
					this.OnsortChanging(value);
					this.SendPropertyChanging();
					this._sort = value;
					this.SendPropertyChanged("sort");
					this.OnsortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f1", DbType="NVarChar(200)")]
		public string f1
		{
			get
			{
				return this._f1;
			}
			set
			{
				if ((this._f1 != value))
				{
					this.Onf1Changing(value);
					this.SendPropertyChanging();
					this._f1 = value;
					this.SendPropertyChanged("f1");
					this.Onf1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f2", DbType="NVarChar(200)")]
		public string f2
		{
			get
			{
				return this._f2;
			}
			set
			{
				if ((this._f2 != value))
				{
					this.Onf2Changing(value);
					this.SendPropertyChanging();
					this._f2 = value;
					this.SendPropertyChanged("f2");
					this.Onf2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f3", DbType="Int")]
		public System.Nullable<int> f3
		{
			get
			{
				return this._f3;
			}
			set
			{
				if ((this._f3 != value))
				{
					this.Onf3Changing(value);
					this.SendPropertyChanging();
					this._f3 = value;
					this.SendPropertyChanged("f3");
					this.Onf3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f4", DbType="Int")]
		public System.Nullable<int> f4
		{
			get
			{
				return this._f4;
			}
			set
			{
				if ((this._f4 != value))
				{
					this.Onf4Changing(value);
					this.SendPropertyChanging();
					this._f4 = value;
					this.SendPropertyChanged("f4");
					this.Onf4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f5", DbType="Int")]
		public System.Nullable<int> f5
		{
			get
			{
				return this._f5;
			}
			set
			{
				if ((this._f5 != value))
				{
					this.Onf5Changing(value);
					this.SendPropertyChanging();
					this._f5 = value;
					this.SendPropertyChanged("f5");
					this.Onf5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f6", DbType="Int")]
		public System.Nullable<int> f6
		{
			get
			{
				return this._f6;
			}
			set
			{
				if ((this._f6 != value))
				{
					this.Onf6Changing(value);
					this.SendPropertyChanging();
					this._f6 = value;
					this.SendPropertyChanged("f6");
					this.Onf6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f7", DbType="Int")]
		public System.Nullable<int> f7
		{
			get
			{
				return this._f7;
			}
			set
			{
				if ((this._f7 != value))
				{
					this.Onf7Changing(value);
					this.SendPropertyChanging();
					this._f7 = value;
					this.SendPropertyChanged("f7");
					this.Onf7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f8", DbType="Int")]
		public System.Nullable<int> f8
		{
			get
			{
				return this._f8;
			}
			set
			{
				if ((this._f8 != value))
				{
					this.Onf8Changing(value);
					this.SendPropertyChanging();
					this._f8 = value;
					this.SendPropertyChanged("f8");
					this.Onf8Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.x_layer")]
	public partial class x_layer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _layer_id;
		
		private System.Nullable<long> _service_id;
		
		private string _name;
		
		private System.Nullable<int> _type;
		
		private string _desc;
		
		private string _copy;
		
		private string _extend;
		
		private string _show_field;
		
		private string _id_field;
		
		private string _fiedls;
		
		private string _drawstyle;
		
		private EntityRef<x_service> _x_service;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onlayer_idChanging(long value);
    partial void Onlayer_idChanged();
    partial void Onservice_idChanging(System.Nullable<long> value);
    partial void Onservice_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OntypeChanging(System.Nullable<int> value);
    partial void OntypeChanged();
    partial void OndescChanging(string value);
    partial void OndescChanged();
    partial void OncopyChanging(string value);
    partial void OncopyChanged();
    partial void OnextendChanging(string value);
    partial void OnextendChanged();
    partial void Onshow_fieldChanging(string value);
    partial void Onshow_fieldChanged();
    partial void Onid_fieldChanging(string value);
    partial void Onid_fieldChanged();
    partial void OnfiedlsChanging(string value);
    partial void OnfiedlsChanged();
    partial void OndrawstyleChanging(string value);
    partial void OndrawstyleChanged();
    #endregion
		
		public x_layer()
		{
			this._x_service = default(EntityRef<x_service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_layer_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long layer_id
		{
			get
			{
				return this._layer_id;
			}
			set
			{
				if ((this._layer_id != value))
				{
					this.Onlayer_idChanging(value);
					this.SendPropertyChanging();
					this._layer_id = value;
					this.SendPropertyChanged("layer_id");
					this.Onlayer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_service_id", DbType="BigInt")]
		public System.Nullable<long> service_id
		{
			get
			{
				return this._service_id;
			}
			set
			{
				if ((this._service_id != value))
				{
					if (this._x_service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onservice_idChanging(value);
					this.SendPropertyChanging();
					this._service_id = value;
					this.SendPropertyChanged("service_id");
					this.Onservice_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(200)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="Int")]
		public System.Nullable<int> type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[desc]", Storage="_desc", DbType="NVarChar(400)")]
		public string desc
		{
			get
			{
				return this._desc;
			}
			set
			{
				if ((this._desc != value))
				{
					this.OndescChanging(value);
					this.SendPropertyChanging();
					this._desc = value;
					this.SendPropertyChanged("desc");
					this.OndescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_copy", DbType="NVarChar(100)")]
		public string copy
		{
			get
			{
				return this._copy;
			}
			set
			{
				if ((this._copy != value))
				{
					this.OncopyChanging(value);
					this.SendPropertyChanging();
					this._copy = value;
					this.SendPropertyChanged("copy");
					this.OncopyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_extend", DbType="NVarChar(400)")]
		public string extend
		{
			get
			{
				return this._extend;
			}
			set
			{
				if ((this._extend != value))
				{
					this.OnextendChanging(value);
					this.SendPropertyChanging();
					this._extend = value;
					this.SendPropertyChanged("extend");
					this.OnextendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_show_field", DbType="NVarChar(100)")]
		public string show_field
		{
			get
			{
				return this._show_field;
			}
			set
			{
				if ((this._show_field != value))
				{
					this.Onshow_fieldChanging(value);
					this.SendPropertyChanging();
					this._show_field = value;
					this.SendPropertyChanged("show_field");
					this.Onshow_fieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_field", DbType="NVarChar(100)")]
		public string id_field
		{
			get
			{
				return this._id_field;
			}
			set
			{
				if ((this._id_field != value))
				{
					this.Onid_fieldChanging(value);
					this.SendPropertyChanging();
					this._id_field = value;
					this.SendPropertyChanged("id_field");
					this.Onid_fieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fiedls", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string fiedls
		{
			get
			{
				return this._fiedls;
			}
			set
			{
				if ((this._fiedls != value))
				{
					this.OnfiedlsChanging(value);
					this.SendPropertyChanging();
					this._fiedls = value;
					this.SendPropertyChanged("fiedls");
					this.OnfiedlsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drawstyle", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string drawstyle
		{
			get
			{
				return this._drawstyle;
			}
			set
			{
				if ((this._drawstyle != value))
				{
					this.OndrawstyleChanging(value);
					this.SendPropertyChanging();
					this._drawstyle = value;
					this.SendPropertyChanged("drawstyle");
					this.OndrawstyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="x_service_x_layer", Storage="_x_service", ThisKey="service_id", OtherKey="service_id", IsForeignKey=true)]
		public x_service x_service
		{
			get
			{
				return this._x_service.Entity;
			}
			set
			{
				x_service previousValue = this._x_service.Entity;
				if (((previousValue != value) 
							|| (this._x_service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._x_service.Entity = null;
						previousValue.x_layer.Remove(this);
					}
					this._x_service.Entity = value;
					if ((value != null))
					{
						value.x_layer.Add(this);
						this._service_id = value.service_id;
					}
					else
					{
						this._service_id = default(Nullable<long>);
					}
					this.SendPropertyChanged("x_service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.x_service")]
	public partial class x_service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _service_id;
		
		private string _name;
		
		private string _dir;
		
		private string _secret_key;
		
		private string _docinfo;
		
		private System.Nullable<int> _blocksize;
		
		private string _innerextend;
		
		private string _fullextend;
		
		private string _watermark;
		
		private string _cache;
		
		private System.Nullable<int> _version;
		
		private System.Nullable<int> _status;
		
		private EntitySet<x_block> _x_block;
		
		private EntitySet<x_layer> _x_layer;
		
		private EntitySet<x_grid> _x_grid;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onservice_idChanging(long value);
    partial void Onservice_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndirChanging(string value);
    partial void OndirChanged();
    partial void Onsecret_keyChanging(string value);
    partial void Onsecret_keyChanged();
    partial void OndocinfoChanging(string value);
    partial void OndocinfoChanged();
    partial void OnblocksizeChanging(System.Nullable<int> value);
    partial void OnblocksizeChanged();
    partial void OninnerextendChanging(string value);
    partial void OninnerextendChanged();
    partial void OnfullextendChanging(string value);
    partial void OnfullextendChanged();
    partial void OnwatermarkChanging(string value);
    partial void OnwatermarkChanged();
    partial void OncacheChanging(string value);
    partial void OncacheChanged();
    partial void OnversionChanging(System.Nullable<int> value);
    partial void OnversionChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    #endregion
		
		public x_service()
		{
			this._x_block = new EntitySet<x_block>(new Action<x_block>(this.attach_x_block), new Action<x_block>(this.detach_x_block));
			this._x_layer = new EntitySet<x_layer>(new Action<x_layer>(this.attach_x_layer), new Action<x_layer>(this.detach_x_layer));
			this._x_grid = new EntitySet<x_grid>(new Action<x_grid>(this.attach_x_grid), new Action<x_grid>(this.detach_x_grid));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_service_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long service_id
		{
			get
			{
				return this._service_id;
			}
			set
			{
				if ((this._service_id != value))
				{
					this.Onservice_idChanging(value);
					this.SendPropertyChanging();
					this._service_id = value;
					this.SendPropertyChanged("service_id");
					this.Onservice_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(200)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dir", DbType="NVarChar(100)")]
		public string dir
		{
			get
			{
				return this._dir;
			}
			set
			{
				if ((this._dir != value))
				{
					this.OndirChanging(value);
					this.SendPropertyChanging();
					this._dir = value;
					this.SendPropertyChanged("dir");
					this.OndirChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secret_key", DbType="NVarChar(400)")]
		public string secret_key
		{
			get
			{
				return this._secret_key;
			}
			set
			{
				if ((this._secret_key != value))
				{
					this.Onsecret_keyChanging(value);
					this.SendPropertyChanging();
					this._secret_key = value;
					this.SendPropertyChanged("secret_key");
					this.Onsecret_keyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_docinfo", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string docinfo
		{
			get
			{
				return this._docinfo;
			}
			set
			{
				if ((this._docinfo != value))
				{
					this.OndocinfoChanging(value);
					this.SendPropertyChanging();
					this._docinfo = value;
					this.SendPropertyChanged("docinfo");
					this.OndocinfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blocksize", DbType="Int")]
		public System.Nullable<int> blocksize
		{
			get
			{
				return this._blocksize;
			}
			set
			{
				if ((this._blocksize != value))
				{
					this.OnblocksizeChanging(value);
					this.SendPropertyChanging();
					this._blocksize = value;
					this.SendPropertyChanged("blocksize");
					this.OnblocksizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_innerextend", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string innerextend
		{
			get
			{
				return this._innerextend;
			}
			set
			{
				if ((this._innerextend != value))
				{
					this.OninnerextendChanging(value);
					this.SendPropertyChanging();
					this._innerextend = value;
					this.SendPropertyChanged("innerextend");
					this.OninnerextendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fullextend", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string fullextend
		{
			get
			{
				return this._fullextend;
			}
			set
			{
				if ((this._fullextend != value))
				{
					this.OnfullextendChanging(value);
					this.SendPropertyChanging();
					this._fullextend = value;
					this.SendPropertyChanged("fullextend");
					this.OnfullextendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_watermark", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string watermark
		{
			get
			{
				return this._watermark;
			}
			set
			{
				if ((this._watermark != value))
				{
					this.OnwatermarkChanging(value);
					this.SendPropertyChanging();
					this._watermark = value;
					this.SendPropertyChanged("watermark");
					this.OnwatermarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cache", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string cache
		{
			get
			{
				return this._cache;
			}
			set
			{
				if ((this._cache != value))
				{
					this.OncacheChanging(value);
					this.SendPropertyChanging();
					this._cache = value;
					this.SendPropertyChanged("cache");
					this.OncacheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_version", DbType="Int")]
		public System.Nullable<int> version
		{
			get
			{
				return this._version;
			}
			set
			{
				if ((this._version != value))
				{
					this.OnversionChanging(value);
					this.SendPropertyChanging();
					this._version = value;
					this.SendPropertyChanged("version");
					this.OnversionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
		public System.Nullable<int> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="x_service_x_block", Storage="_x_block", ThisKey="service_id", OtherKey="service_id")]
		public EntitySet<x_block> x_block
		{
			get
			{
				return this._x_block;
			}
			set
			{
				this._x_block.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="x_service_x_layer", Storage="_x_layer", ThisKey="service_id", OtherKey="service_id")]
		public EntitySet<x_layer> x_layer
		{
			get
			{
				return this._x_layer;
			}
			set
			{
				this._x_layer.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="x_service_x_grid", Storage="_x_grid", ThisKey="service_id", OtherKey="service_id")]
		public EntitySet<x_grid> x_grid
		{
			get
			{
				return this._x_grid;
			}
			set
			{
				this._x_grid.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_x_block(x_block entity)
		{
			this.SendPropertyChanging();
			entity.x_service = this;
		}
		
		private void detach_x_block(x_block entity)
		{
			this.SendPropertyChanging();
			entity.x_service = null;
		}
		
		private void attach_x_layer(x_layer entity)
		{
			this.SendPropertyChanging();
			entity.x_service = this;
		}
		
		private void detach_x_layer(x_layer entity)
		{
			this.SendPropertyChanging();
			entity.x_service = null;
		}
		
		private void attach_x_grid(x_grid entity)
		{
			this.SendPropertyChanging();
			entity.x_service = this;
		}
		
		private void detach_x_grid(x_grid entity)
		{
			this.SendPropertyChanging();
			entity.x_service = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.x_grid")]
	public partial class x_grid : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _grid_id;
		
		private System.Nullable<long> _service_id;
		
		private string _name;
		
		private System.Nullable<decimal> _lng;
		
		private System.Nullable<decimal> _lat;
		
		private string _style;
		
		private System.Nullable<int> _type;
		
		private string _points;
		
		private string _data;
		
		private EntityRef<x_service> _x_service;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ongrid_idChanging(long value);
    partial void Ongrid_idChanged();
    partial void Onservice_idChanging(System.Nullable<long> value);
    partial void Onservice_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnlngChanging(System.Nullable<decimal> value);
    partial void OnlngChanged();
    partial void OnlatChanging(System.Nullable<decimal> value);
    partial void OnlatChanged();
    partial void OnstyleChanging(string value);
    partial void OnstyleChanged();
    partial void OntypeChanging(System.Nullable<int> value);
    partial void OntypeChanged();
    partial void OnpointsChanging(string value);
    partial void OnpointsChanged();
    partial void OndataChanging(string value);
    partial void OndataChanged();
    #endregion
		
		public x_grid()
		{
			this._x_service = default(EntityRef<x_service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grid_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long grid_id
		{
			get
			{
				return this._grid_id;
			}
			set
			{
				if ((this._grid_id != value))
				{
					this.Ongrid_idChanging(value);
					this.SendPropertyChanging();
					this._grid_id = value;
					this.SendPropertyChanged("grid_id");
					this.Ongrid_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_service_id", DbType="BigInt")]
		public System.Nullable<long> service_id
		{
			get
			{
				return this._service_id;
			}
			set
			{
				if ((this._service_id != value))
				{
					if (this._x_service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onservice_idChanging(value);
					this.SendPropertyChanging();
					this._service_id = value;
					this.SendPropertyChanged("service_id");
					this.Onservice_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(200)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lng", DbType="Decimal(18,8)")]
		public System.Nullable<decimal> lng
		{
			get
			{
				return this._lng;
			}
			set
			{
				if ((this._lng != value))
				{
					this.OnlngChanging(value);
					this.SendPropertyChanging();
					this._lng = value;
					this.SendPropertyChanged("lng");
					this.OnlngChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lat", DbType="Decimal(18,8)")]
		public System.Nullable<decimal> lat
		{
			get
			{
				return this._lat;
			}
			set
			{
				if ((this._lat != value))
				{
					this.OnlatChanging(value);
					this.SendPropertyChanging();
					this._lat = value;
					this.SendPropertyChanged("lat");
					this.OnlatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_style", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string style
		{
			get
			{
				return this._style;
			}
			set
			{
				if ((this._style != value))
				{
					this.OnstyleChanging(value);
					this.SendPropertyChanging();
					this._style = value;
					this.SendPropertyChanged("style");
					this.OnstyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="Int")]
		public System.Nullable<int> type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_points", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string points
		{
			get
			{
				return this._points;
			}
			set
			{
				if ((this._points != value))
				{
					this.OnpointsChanging(value);
					this.SendPropertyChanging();
					this._points = value;
					this.SendPropertyChanged("points");
					this.OnpointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="x_service_x_grid", Storage="_x_service", ThisKey="service_id", OtherKey="service_id", IsForeignKey=true)]
		public x_service x_service
		{
			get
			{
				return this._x_service.Entity;
			}
			set
			{
				x_service previousValue = this._x_service.Entity;
				if (((previousValue != value) 
							|| (this._x_service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._x_service.Entity = null;
						previousValue.x_grid.Remove(this);
					}
					this._x_service.Entity = value;
					if ((value != null))
					{
						value.x_grid.Add(this);
						this._service_id = value.service_id;
					}
					else
					{
						this._service_id = default(Nullable<long>);
					}
					this.SendPropertyChanged("x_service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
