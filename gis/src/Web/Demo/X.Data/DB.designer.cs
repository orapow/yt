#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace X.Data
{
    using System.Data.Linq;
    using System.Data.Linq.Mapping;
    using System.Data;
    using System.Collections.Generic;
    using System.Reflection;
    using System.Linq;
    using System.Linq.Expressions;
    using System.ComponentModel;
    using System;


    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name = "yt.gis")]
    public partial class DataClassesDataContext : X.Web.Com.DB
    {
        
        #region 可扩展性方法定义
        partial void OnCreated();
        partial void Insertx_video(x_video instance);
        partial void Updatex_video(x_video instance);
        partial void Deletex_video(x_video instance);
        partial void Insertx_gps(x_gps instance);
        partial void Updatex_gps(x_gps instance);
        partial void Deletex_gps(x_gps instance);
        partial void Insertx_gps_log(x_gps_log instance);
        partial void Updatex_gps_log(x_gps_log instance);
        partial void Deletex_gps_log(x_gps_log instance);
        partial void Insertx_pick(x_pick instance);
        partial void Updatex_pick(x_pick instance);
        partial void Deletex_pick(x_pick instance);
        partial void Insertx_dict(x_dict instance);
        partial void Updatex_dict(x_dict instance);
        partial void Deletex_dict(x_dict instance);
        partial void Insertx_floor(x_floor instance);
        partial void Updatex_floor(x_floor instance);
        partial void Deletex_floor(x_floor instance);
        partial void Insertx_point(x_point instance);
        partial void Updatex_point(x_point instance);
        partial void Deletex_point(x_point instance);
        partial void Insertx_grid(x_grid instance);
        partial void Updatex_grid(x_grid instance);
        partial void Deletex_grid(x_grid instance);
        partial void Insertx_poi(x_poi instance);
        partial void Updatex_poi(x_poi instance);
        partial void Deletex_poi(x_poi instance);
        #endregion

        public DataClassesDataContext() :
                base(global::X.Data.Properties.Settings.Default.yt_gisConnectionString, mappingSource)
        {
            OnCreated();
        }

        public DataClassesDataContext(string connection) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public DataClassesDataContext(System.Data.IDbConnection connection) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public System.Data.Linq.Table<x_video> x_video
        {
            get
            {
                return this.GetTable<x_video>();
            }
        }

        public System.Data.Linq.Table<x_gps> x_gps
        {
            get
            {
                return this.GetTable<x_gps>();
            }
        }

        public System.Data.Linq.Table<x_gps_log> x_gps_log
        {
            get
            {
                return this.GetTable<x_gps_log>();
            }
        }

        public System.Data.Linq.Table<x_pick> x_pick
        {
            get
            {
                return this.GetTable<x_pick>();
            }
        }

        public System.Data.Linq.Table<x_dict> x_dict
        {
            get
            {
                return this.GetTable<x_dict>();
            }
        }

        public System.Data.Linq.Table<x_floor> x_floor
        {
            get
            {
                return this.GetTable<x_floor>();
            }
        }

        public System.Data.Linq.Table<x_point> x_point
        {
            get
            {
                return this.GetTable<x_point>();
            }
        }

        public System.Data.Linq.Table<x_grid> x_grid
        {
            get
            {
                return this.GetTable<x_grid>();
            }
        }

        public System.Data.Linq.Table<x_poi> x_poi
        {
            get
            {
                return this.GetTable<x_poi>();
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.x_video")]
    public partial class x_video : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _video_id;

        private System.Nullable<long> _grid_id;

        private string _name;

        private string _url;

        private string _remark;

        private EntityRef<x_grid> _x_grid;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Onvideo_idChanging(long value);
        partial void Onvideo_idChanged();
        partial void Ongrid_idChanging(System.Nullable<long> value);
        partial void Ongrid_idChanged();
        partial void OnnameChanging(string value);
        partial void OnnameChanged();
        partial void OnurlChanging(string value);
        partial void OnurlChanged();
        partial void OnremarkChanging(string value);
        partial void OnremarkChanged();
        #endregion

        public x_video()
        {
            this._x_grid = default(EntityRef<x_grid>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_video_id", AutoSync = AutoSync.OnInsert, DbType = "BigInt NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public long video_id
        {
            get
            {
                return this._video_id;
            }
            set
            {
                if ((this._video_id != value))
                {
                    this.Onvideo_idChanging(value);
                    this.SendPropertyChanging();
                    this._video_id = value;
                    this.SendPropertyChanged("video_id");
                    this.Onvideo_idChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_grid_id", DbType = "BigInt")]
        public System.Nullable<long> grid_id
        {
            get
            {
                return this._grid_id;
            }
            set
            {
                if ((this._grid_id != value))
                {
                    if (this._x_grid.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.Ongrid_idChanging(value);
                    this.SendPropertyChanging();
                    this._grid_id = value;
                    this.SendPropertyChanged("grid_id");
                    this.Ongrid_idChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_name", DbType = "NVarChar(260)")]
        public string name
        {
            get
            {
                return this._name;
            }
            set
            {
                if ((this._name != value))
                {
                    this.OnnameChanging(value);
                    this.SendPropertyChanging();
                    this._name = value;
                    this.SendPropertyChanged("name");
                    this.OnnameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_url", DbType = "NVarChar(400)")]
        public string url
        {
            get
            {
                return this._url;
            }
            set
            {
                if ((this._url != value))
                {
                    this.OnurlChanging(value);
                    this.SendPropertyChanging();
                    this._url = value;
                    this.SendPropertyChanged("url");
                    this.OnurlChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_remark", DbType = "NVarChar(400)")]
        public string remark
        {
            get
            {
                return this._remark;
            }
            set
            {
                if ((this._remark != value))
                {
                    this.OnremarkChanging(value);
                    this.SendPropertyChanging();
                    this._remark = value;
                    this.SendPropertyChanged("remark");
                    this.OnremarkChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "x_grid_x_video", Storage = "_x_grid", ThisKey = "grid_id", OtherKey = "grid_id", IsForeignKey = true)]
        public x_grid x_grid
        {
            get
            {
                return this._x_grid.Entity;
            }
            set
            {
                x_grid previousValue = this._x_grid.Entity;
                if (((previousValue != value)
                            || (this._x_grid.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._x_grid.Entity = null;
                        previousValue.x_video.Remove(this);
                    }
                    this._x_grid.Entity = value;
                    if ((value != null))
                    {
                        value.x_video.Add(this);
                        this._grid_id = value.grid_id;
                    }
                    else
                    {
                        this._grid_id = default(Nullable<long>);
                    }
                    this.SendPropertyChanged("x_grid");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.x_gps")]
    public partial class x_gps : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _gps_id;

        private System.Nullable<long> _grid_id;

        private string _no;

        private string _name;

        private string _remark;

        private System.Nullable<bool> _online;

        private EntitySet<x_gps_log> _x_gps_log;

        private EntityRef<x_grid> _x_grid;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Ongps_idChanging(long value);
        partial void Ongps_idChanged();
        partial void Ongrid_idChanging(System.Nullable<long> value);
        partial void Ongrid_idChanged();
        partial void OnnoChanging(string value);
        partial void OnnoChanged();
        partial void OnnameChanging(string value);
        partial void OnnameChanged();
        partial void OnremarkChanging(string value);
        partial void OnremarkChanged();
        partial void OnonlineChanging(System.Nullable<bool> value);
        partial void OnonlineChanged();
        #endregion

        public x_gps()
        {
            this._x_gps_log = new EntitySet<x_gps_log>(new Action<x_gps_log>(this.attach_x_gps_log), new Action<x_gps_log>(this.detach_x_gps_log));
            this._x_grid = default(EntityRef<x_grid>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_gps_id", AutoSync = AutoSync.OnInsert, DbType = "BigInt NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public long gps_id
        {
            get
            {
                return this._gps_id;
            }
            set
            {
                if ((this._gps_id != value))
                {
                    this.Ongps_idChanging(value);
                    this.SendPropertyChanging();
                    this._gps_id = value;
                    this.SendPropertyChanged("gps_id");
                    this.Ongps_idChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_grid_id", DbType = "BigInt")]
        public System.Nullable<long> grid_id
        {
            get
            {
                return this._grid_id;
            }
            set
            {
                if ((this._grid_id != value))
                {
                    if (this._x_grid.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.Ongrid_idChanging(value);
                    this.SendPropertyChanging();
                    this._grid_id = value;
                    this.SendPropertyChanged("grid_id");
                    this.Ongrid_idChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_no", DbType = "NVarChar(64)")]
        public string no
        {
            get
            {
                return this._no;
            }
            set
            {
                if ((this._no != value))
                {
                    this.OnnoChanging(value);
                    this.SendPropertyChanging();
                    this._no = value;
                    this.SendPropertyChanged("no");
                    this.OnnoChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_name", DbType = "NVarChar(260)")]
        public string name
        {
            get
            {
                return this._name;
            }
            set
            {
                if ((this._name != value))
                {
                    this.OnnameChanging(value);
                    this.SendPropertyChanging();
                    this._name = value;
                    this.SendPropertyChanged("name");
                    this.OnnameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_remark", DbType = "NVarChar(400)")]
        public string remark
        {
            get
            {
                return this._remark;
            }
            set
            {
                if ((this._remark != value))
                {
                    this.OnremarkChanging(value);
                    this.SendPropertyChanging();
                    this._remark = value;
                    this.SendPropertyChanged("remark");
                    this.OnremarkChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_online", DbType = "Bit")]
        public System.Nullable<bool> online
        {
            get
            {
                return this._online;
            }
            set
            {
                if ((this._online != value))
                {
                    this.OnonlineChanging(value);
                    this.SendPropertyChanging();
                    this._online = value;
                    this.SendPropertyChanged("online");
                    this.OnonlineChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "x_gps_x_gps_log", Storage = "_x_gps_log", ThisKey = "gps_id", OtherKey = "gps_id")]
        public EntitySet<x_gps_log> x_gps_log
        {
            get
            {
                return this._x_gps_log;
            }
            set
            {
                this._x_gps_log.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "x_grid_x_gps", Storage = "_x_grid", ThisKey = "grid_id", OtherKey = "grid_id", IsForeignKey = true)]
        public x_grid x_grid
        {
            get
            {
                return this._x_grid.Entity;
            }
            set
            {
                x_grid previousValue = this._x_grid.Entity;
                if (((previousValue != value)
                            || (this._x_grid.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._x_grid.Entity = null;
                        previousValue.x_gps.Remove(this);
                    }
                    this._x_grid.Entity = value;
                    if ((value != null))
                    {
                        value.x_gps.Add(this);
                        this._grid_id = value.grid_id;
                    }
                    else
                    {
                        this._grid_id = default(Nullable<long>);
                    }
                    this.SendPropertyChanged("x_grid");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_x_gps_log(x_gps_log entity)
        {
            this.SendPropertyChanging();
            entity.x_gps = this;
        }

        private void detach_x_gps_log(x_gps_log entity)
        {
            this.SendPropertyChanging();
            entity.x_gps = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.x_gps_log")]
    public partial class x_gps_log : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _gps_log_id;

        private System.Nullable<long> _gps_id;

        private System.Nullable<System.DateTime> _no;

        private System.Nullable<decimal> _lng;

        private System.Nullable<decimal> _lat;

        private EntityRef<x_gps> _x_gps;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Ongps_log_idChanging(long value);
        partial void Ongps_log_idChanged();
        partial void Ongps_idChanging(System.Nullable<long> value);
        partial void Ongps_idChanged();
        partial void OnnoChanging(System.Nullable<System.DateTime> value);
        partial void OnnoChanged();
        partial void OnlngChanging(System.Nullable<decimal> value);
        partial void OnlngChanged();
        partial void OnlatChanging(System.Nullable<decimal> value);
        partial void OnlatChanged();
        #endregion

        public x_gps_log()
        {
            this._x_gps = default(EntityRef<x_gps>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_gps_log_id", AutoSync = AutoSync.OnInsert, DbType = "BigInt NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public long gps_log_id
        {
            get
            {
                return this._gps_log_id;
            }
            set
            {
                if ((this._gps_log_id != value))
                {
                    this.Ongps_log_idChanging(value);
                    this.SendPropertyChanging();
                    this._gps_log_id = value;
                    this.SendPropertyChanged("gps_log_id");
                    this.Ongps_log_idChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_gps_id", DbType = "BigInt")]
        public System.Nullable<long> gps_id
        {
            get
            {
                return this._gps_id;
            }
            set
            {
                if ((this._gps_id != value))
                {
                    if (this._x_gps.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.Ongps_idChanging(value);
                    this.SendPropertyChanging();
                    this._gps_id = value;
                    this.SendPropertyChanged("gps_id");
                    this.Ongps_idChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_no", DbType = "DateTime")]
        public System.Nullable<System.DateTime> no
        {
            get
            {
                return this._no;
            }
            set
            {
                if ((this._no != value))
                {
                    this.OnnoChanging(value);
                    this.SendPropertyChanging();
                    this._no = value;
                    this.SendPropertyChanged("no");
                    this.OnnoChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_lng", DbType = "Decimal(18,8)")]
        public System.Nullable<decimal> lng
        {
            get
            {
                return this._lng;
            }
            set
            {
                if ((this._lng != value))
                {
                    this.OnlngChanging(value);
                    this.SendPropertyChanging();
                    this._lng = value;
                    this.SendPropertyChanged("lng");
                    this.OnlngChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_lat", DbType = "Decimal(18,8)")]
        public System.Nullable<decimal> lat
        {
            get
            {
                return this._lat;
            }
            set
            {
                if ((this._lat != value))
                {
                    this.OnlatChanging(value);
                    this.SendPropertyChanging();
                    this._lat = value;
                    this.SendPropertyChanged("lat");
                    this.OnlatChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "x_gps_x_gps_log", Storage = "_x_gps", ThisKey = "gps_id", OtherKey = "gps_id", IsForeignKey = true)]
        public x_gps x_gps
        {
            get
            {
                return this._x_gps.Entity;
            }
            set
            {
                x_gps previousValue = this._x_gps.Entity;
                if (((previousValue != value)
                            || (this._x_gps.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._x_gps.Entity = null;
                        previousValue.x_gps_log.Remove(this);
                    }
                    this._x_gps.Entity = value;
                    if ((value != null))
                    {
                        value.x_gps_log.Add(this);
                        this._gps_id = value.gps_id;
                    }
                    else
                    {
                        this._gps_id = default(Nullable<long>);
                    }
                    this.SendPropertyChanged("x_gps");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.x_pick")]
    public partial class x_pick : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _pick_id;

        private System.Nullable<long> _grid_id;

        private string _name;

        private System.Nullable<int> _type;

        private string _content;

        private EntityRef<x_grid> _x_grid;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Onpick_idChanging(long value);
        partial void Onpick_idChanged();
        partial void Ongrid_idChanging(System.Nullable<long> value);
        partial void Ongrid_idChanged();
        partial void OnnameChanging(string value);
        partial void OnnameChanged();
        partial void OntypeChanging(System.Nullable<int> value);
        partial void OntypeChanged();
        partial void OncontentChanging(string value);
        partial void OncontentChanged();
        #endregion

        public x_pick()
        {
            this._x_grid = default(EntityRef<x_grid>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_pick_id", AutoSync = AutoSync.OnInsert, DbType = "BigInt NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public long pick_id
        {
            get
            {
                return this._pick_id;
            }
            set
            {
                if ((this._pick_id != value))
                {
                    this.Onpick_idChanging(value);
                    this.SendPropertyChanging();
                    this._pick_id = value;
                    this.SendPropertyChanged("pick_id");
                    this.Onpick_idChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_grid_id", DbType = "BigInt")]
        public System.Nullable<long> grid_id
        {
            get
            {
                return this._grid_id;
            }
            set
            {
                if ((this._grid_id != value))
                {
                    if (this._x_grid.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.Ongrid_idChanging(value);
                    this.SendPropertyChanging();
                    this._grid_id = value;
                    this.SendPropertyChanged("grid_id");
                    this.Ongrid_idChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_name", DbType = "NVarChar(200)")]
        public string name
        {
            get
            {
                return this._name;
            }
            set
            {
                if ((this._name != value))
                {
                    this.OnnameChanging(value);
                    this.SendPropertyChanging();
                    this._name = value;
                    this.SendPropertyChanged("name");
                    this.OnnameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_type", DbType = "Int")]
        public System.Nullable<int> type
        {
            get
            {
                return this._type;
            }
            set
            {
                if ((this._type != value))
                {
                    this.OntypeChanging(value);
                    this.SendPropertyChanging();
                    this._type = value;
                    this.SendPropertyChanged("type");
                    this.OntypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_content", DbType = "NVarChar(600)")]
        public string content
        {
            get
            {
                return this._content;
            }
            set
            {
                if ((this._content != value))
                {
                    this.OncontentChanging(value);
                    this.SendPropertyChanging();
                    this._content = value;
                    this.SendPropertyChanged("content");
                    this.OncontentChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "x_grid_x_pick", Storage = "_x_grid", ThisKey = "grid_id", OtherKey = "grid_id", IsForeignKey = true)]
        public x_grid x_grid
        {
            get
            {
                return this._x_grid.Entity;
            }
            set
            {
                x_grid previousValue = this._x_grid.Entity;
                if (((previousValue != value)
                            || (this._x_grid.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._x_grid.Entity = null;
                        previousValue.x_pick.Remove(this);
                    }
                    this._x_grid.Entity = value;
                    if ((value != null))
                    {
                        value.x_pick.Add(this);
                        this._grid_id = value.grid_id;
                    }
                    else
                    {
                        this._grid_id = default(Nullable<long>);
                    }
                    this.SendPropertyChanged("x_grid");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.x_dict")]
    public partial class x_dict : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _dict_id;

        private string _code;

        private string _img;

        private string _name;

        private string _jp;

        private string _upval;

        private string _value;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Ondict_idChanging(long value);
        partial void Ondict_idChanged();
        partial void OncodeChanging(string value);
        partial void OncodeChanged();
        partial void OnimgChanging(string value);
        partial void OnimgChanged();
        partial void OnnameChanging(string value);
        partial void OnnameChanged();
        partial void OnjpChanging(string value);
        partial void OnjpChanged();
        partial void OnupvalChanging(string value);
        partial void OnupvalChanged();
        partial void OnvalueChanging(string value);
        partial void OnvalueChanged();
        #endregion

        public x_dict()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_dict_id", AutoSync = AutoSync.OnInsert, DbType = "BigInt NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public long dict_id
        {
            get
            {
                return this._dict_id;
            }
            set
            {
                if ((this._dict_id != value))
                {
                    this.Ondict_idChanging(value);
                    this.SendPropertyChanging();
                    this._dict_id = value;
                    this.SendPropertyChanged("dict_id");
                    this.Ondict_idChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_code", DbType = "NVarChar(20)")]
        public string code
        {
            get
            {
                return this._code;
            }
            set
            {
                if ((this._code != value))
                {
                    this.OncodeChanging(value);
                    this.SendPropertyChanging();
                    this._code = value;
                    this.SendPropertyChanged("code");
                    this.OncodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_img", DbType = "NVarChar(200)")]
        public string img
        {
            get
            {
                return this._img;
            }
            set
            {
                if ((this._img != value))
                {
                    this.OnimgChanging(value);
                    this.SendPropertyChanging();
                    this._img = value;
                    this.SendPropertyChanged("img");
                    this.OnimgChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_name", DbType = "NVarChar(50)")]
        public string name
        {
            get
            {
                return this._name;
            }
            set
            {
                if ((this._name != value))
                {
                    this.OnnameChanging(value);
                    this.SendPropertyChanging();
                    this._name = value;
                    this.SendPropertyChanged("name");
                    this.OnnameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_jp", DbType = "NVarChar(50)")]
        public string jp
        {
            get
            {
                return this._jp;
            }
            set
            {
                if ((this._jp != value))
                {
                    this.OnjpChanging(value);
                    this.SendPropertyChanging();
                    this._jp = value;
                    this.SendPropertyChanged("jp");
                    this.OnjpChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_upval", DbType = "NVarChar(10)")]
        public string upval
        {
            get
            {
                return this._upval;
            }
            set
            {
                if ((this._upval != value))
                {
                    this.OnupvalChanging(value);
                    this.SendPropertyChanging();
                    this._upval = value;
                    this.SendPropertyChanged("upval");
                    this.OnupvalChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_value", DbType = "NVarChar(100)")]
        public string value
        {
            get
            {
                return this._value;
            }
            set
            {
                if ((this._value != value))
                {
                    this.OnvalueChanging(value);
                    this.SendPropertyChanging();
                    this._value = value;
                    this.SendPropertyChanged("value");
                    this.OnvalueChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.x_floor")]
    public partial class x_floor : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _floor_id;

        private System.Nullable<long> _grid_id;

        private string _name;

        private System.Nullable<int> _value;

        private string _bgimg;

        private EntitySet<x_point> _x_point;

        private EntityRef<x_grid> _x_grid;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Onfloor_idChanging(long value);
        partial void Onfloor_idChanged();
        partial void Ongrid_idChanging(System.Nullable<long> value);
        partial void Ongrid_idChanged();
        partial void OnnameChanging(string value);
        partial void OnnameChanged();
        partial void OnvalueChanging(System.Nullable<int> value);
        partial void OnvalueChanged();
        partial void OnbgimgChanging(string value);
        partial void OnbgimgChanged();
        #endregion

        public x_floor()
        {
            this._x_point = new EntitySet<x_point>(new Action<x_point>(this.attach_x_point), new Action<x_point>(this.detach_x_point));
            this._x_grid = default(EntityRef<x_grid>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_floor_id", AutoSync = AutoSync.OnInsert, DbType = "BigInt NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public long floor_id
        {
            get
            {
                return this._floor_id;
            }
            set
            {
                if ((this._floor_id != value))
                {
                    this.Onfloor_idChanging(value);
                    this.SendPropertyChanging();
                    this._floor_id = value;
                    this.SendPropertyChanged("floor_id");
                    this.Onfloor_idChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_grid_id", DbType = "BigInt")]
        public System.Nullable<long> grid_id
        {
            get
            {
                return this._grid_id;
            }
            set
            {
                if ((this._grid_id != value))
                {
                    if (this._x_grid.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.Ongrid_idChanging(value);
                    this.SendPropertyChanging();
                    this._grid_id = value;
                    this.SendPropertyChanged("grid_id");
                    this.Ongrid_idChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_name", DbType = "NVarChar(40)")]
        public string name
        {
            get
            {
                return this._name;
            }
            set
            {
                if ((this._name != value))
                {
                    this.OnnameChanging(value);
                    this.SendPropertyChanging();
                    this._name = value;
                    this.SendPropertyChanged("name");
                    this.OnnameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_value", DbType = "Int")]
        public System.Nullable<int> value
        {
            get
            {
                return this._value;
            }
            set
            {
                if ((this._value != value))
                {
                    this.OnvalueChanging(value);
                    this.SendPropertyChanging();
                    this._value = value;
                    this.SendPropertyChanged("value");
                    this.OnvalueChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_bgimg", DbType = "NVarChar(200)")]
        public string bgimg
        {
            get
            {
                return this._bgimg;
            }
            set
            {
                if ((this._bgimg != value))
                {
                    this.OnbgimgChanging(value);
                    this.SendPropertyChanging();
                    this._bgimg = value;
                    this.SendPropertyChanged("bgimg");
                    this.OnbgimgChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "x_floor_x_point", Storage = "_x_point", ThisKey = "floor_id", OtherKey = "floor_id")]
        public EntitySet<x_point> x_point
        {
            get
            {
                return this._x_point;
            }
            set
            {
                this._x_point.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "x_grid_x_floor", Storage = "_x_grid", ThisKey = "grid_id", OtherKey = "grid_id", IsForeignKey = true)]
        public x_grid x_grid
        {
            get
            {
                return this._x_grid.Entity;
            }
            set
            {
                x_grid previousValue = this._x_grid.Entity;
                if (((previousValue != value)
                            || (this._x_grid.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._x_grid.Entity = null;
                        previousValue.x_floor.Remove(this);
                    }
                    this._x_grid.Entity = value;
                    if ((value != null))
                    {
                        value.x_floor.Add(this);
                        this._grid_id = value.grid_id;
                    }
                    else
                    {
                        this._grid_id = default(Nullable<long>);
                    }
                    this.SendPropertyChanged("x_grid");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_x_point(x_point entity)
        {
            this.SendPropertyChanging();
            entity.x_floor = this;
        }

        private void detach_x_point(x_point entity)
        {
            this.SendPropertyChanging();
            entity.x_floor = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.x_point")]
    public partial class x_point : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _point_id;

        private System.Nullable<long> _floor_id;

        private string _name;

        private System.Nullable<int> _pointx;

        private System.Nullable<int> _pointy;

        private string _style;

        private System.Nullable<int> _type;

        private string _points;

        private EntityRef<x_floor> _x_floor;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Onpoint_idChanging(long value);
        partial void Onpoint_idChanged();
        partial void Onfloor_idChanging(System.Nullable<long> value);
        partial void Onfloor_idChanged();
        partial void OnnameChanging(string value);
        partial void OnnameChanged();
        partial void OnpointxChanging(System.Nullable<int> value);
        partial void OnpointxChanged();
        partial void OnpointyChanging(System.Nullable<int> value);
        partial void OnpointyChanged();
        partial void OnstyleChanging(string value);
        partial void OnstyleChanged();
        partial void OntypeChanging(System.Nullable<int> value);
        partial void OntypeChanged();
        partial void OnpointsChanging(string value);
        partial void OnpointsChanged();
        #endregion

        public x_point()
        {
            this._x_floor = default(EntityRef<x_floor>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_point_id", AutoSync = AutoSync.OnInsert, DbType = "BigInt NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public long point_id
        {
            get
            {
                return this._point_id;
            }
            set
            {
                if ((this._point_id != value))
                {
                    this.Onpoint_idChanging(value);
                    this.SendPropertyChanging();
                    this._point_id = value;
                    this.SendPropertyChanged("point_id");
                    this.Onpoint_idChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_floor_id", DbType = "BigInt")]
        public System.Nullable<long> floor_id
        {
            get
            {
                return this._floor_id;
            }
            set
            {
                if ((this._floor_id != value))
                {
                    if (this._x_floor.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.Onfloor_idChanging(value);
                    this.SendPropertyChanging();
                    this._floor_id = value;
                    this.SendPropertyChanged("floor_id");
                    this.Onfloor_idChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_name", DbType = "NVarChar(60)")]
        public string name
        {
            get
            {
                return this._name;
            }
            set
            {
                if ((this._name != value))
                {
                    this.OnnameChanging(value);
                    this.SendPropertyChanging();
                    this._name = value;
                    this.SendPropertyChanged("name");
                    this.OnnameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_pointx", DbType = "Int")]
        public System.Nullable<int> pointx
        {
            get
            {
                return this._pointx;
            }
            set
            {
                if ((this._pointx != value))
                {
                    this.OnpointxChanging(value);
                    this.SendPropertyChanging();
                    this._pointx = value;
                    this.SendPropertyChanged("pointx");
                    this.OnpointxChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_pointy", DbType = "Int")]
        public System.Nullable<int> pointy
        {
            get
            {
                return this._pointy;
            }
            set
            {
                if ((this._pointy != value))
                {
                    this.OnpointyChanging(value);
                    this.SendPropertyChanging();
                    this._pointy = value;
                    this.SendPropertyChanged("pointy");
                    this.OnpointyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_style", DbType = "NVarChar(200)")]
        public string style
        {
            get
            {
                return this._style;
            }
            set
            {
                if ((this._style != value))
                {
                    this.OnstyleChanging(value);
                    this.SendPropertyChanging();
                    this._style = value;
                    this.SendPropertyChanged("style");
                    this.OnstyleChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_type", DbType = "Int")]
        public System.Nullable<int> type
        {
            get
            {
                return this._type;
            }
            set
            {
                if ((this._type != value))
                {
                    this.OntypeChanging(value);
                    this.SendPropertyChanging();
                    this._type = value;
                    this.SendPropertyChanged("type");
                    this.OntypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_points", DbType = "NText", UpdateCheck = UpdateCheck.Never)]
        public string points
        {
            get
            {
                return this._points;
            }
            set
            {
                if ((this._points != value))
                {
                    this.OnpointsChanging(value);
                    this.SendPropertyChanging();
                    this._points = value;
                    this.SendPropertyChanged("points");
                    this.OnpointsChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "x_floor_x_point", Storage = "_x_floor", ThisKey = "floor_id", OtherKey = "floor_id", IsForeignKey = true)]
        public x_floor x_floor
        {
            get
            {
                return this._x_floor.Entity;
            }
            set
            {
                x_floor previousValue = this._x_floor.Entity;
                if (((previousValue != value)
                            || (this._x_floor.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._x_floor.Entity = null;
                        previousValue.x_point.Remove(this);
                    }
                    this._x_floor.Entity = value;
                    if ((value != null))
                    {
                        value.x_point.Add(this);
                        this._floor_id = value.floor_id;
                    }
                    else
                    {
                        this._floor_id = default(Nullable<long>);
                    }
                    this.SendPropertyChanged("x_floor");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.x_grid")]
    public partial class x_grid : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _grid_id;

        private string _name;

        private System.Nullable<decimal> _lng;

        private System.Nullable<decimal> _lat;

        private string _style;

        private System.Nullable<int> _type;

        private string _points;

        private EntitySet<x_video> _x_video;

        private EntitySet<x_gps> _x_gps;

        private EntitySet<x_pick> _x_pick;

        private EntitySet<x_floor> _x_floor;

        private EntitySet<x_poi> _x_poi;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Ongrid_idChanging(long value);
        partial void Ongrid_idChanged();
        partial void OnnameChanging(string value);
        partial void OnnameChanged();
        partial void OnlngChanging(System.Nullable<decimal> value);
        partial void OnlngChanged();
        partial void OnlatChanging(System.Nullable<decimal> value);
        partial void OnlatChanged();
        partial void OnstyleChanging(string value);
        partial void OnstyleChanged();
        partial void OntypeChanging(System.Nullable<int> value);
        partial void OntypeChanged();
        partial void OnpointsChanging(string value);
        partial void OnpointsChanged();
        #endregion

        public x_grid()
        {
            this._x_video = new EntitySet<x_video>(new Action<x_video>(this.attach_x_video), new Action<x_video>(this.detach_x_video));
            this._x_gps = new EntitySet<x_gps>(new Action<x_gps>(this.attach_x_gps), new Action<x_gps>(this.detach_x_gps));
            this._x_pick = new EntitySet<x_pick>(new Action<x_pick>(this.attach_x_pick), new Action<x_pick>(this.detach_x_pick));
            this._x_floor = new EntitySet<x_floor>(new Action<x_floor>(this.attach_x_floor), new Action<x_floor>(this.detach_x_floor));
            this._x_poi = new EntitySet<x_poi>(new Action<x_poi>(this.attach_x_poi), new Action<x_poi>(this.detach_x_poi));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_grid_id", AutoSync = AutoSync.OnInsert, DbType = "BigInt NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public long grid_id
        {
            get
            {
                return this._grid_id;
            }
            set
            {
                if ((this._grid_id != value))
                {
                    this.Ongrid_idChanging(value);
                    this.SendPropertyChanging();
                    this._grid_id = value;
                    this.SendPropertyChanged("grid_id");
                    this.Ongrid_idChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_name", DbType = "NVarChar(250)")]
        public string name
        {
            get
            {
                return this._name;
            }
            set
            {
                if ((this._name != value))
                {
                    this.OnnameChanging(value);
                    this.SendPropertyChanging();
                    this._name = value;
                    this.SendPropertyChanged("name");
                    this.OnnameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_lng", DbType = "Decimal(18,8)")]
        public System.Nullable<decimal> lng
        {
            get
            {
                return this._lng;
            }
            set
            {
                if ((this._lng != value))
                {
                    this.OnlngChanging(value);
                    this.SendPropertyChanging();
                    this._lng = value;
                    this.SendPropertyChanged("lng");
                    this.OnlngChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_lat", DbType = "Decimal(18,8)")]
        public System.Nullable<decimal> lat
        {
            get
            {
                return this._lat;
            }
            set
            {
                if ((this._lat != value))
                {
                    this.OnlatChanging(value);
                    this.SendPropertyChanging();
                    this._lat = value;
                    this.SendPropertyChanged("lat");
                    this.OnlatChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_style", DbType = "NText", UpdateCheck = UpdateCheck.Never)]
        public string style
        {
            get
            {
                return this._style;
            }
            set
            {
                if ((this._style != value))
                {
                    this.OnstyleChanging(value);
                    this.SendPropertyChanging();
                    this._style = value;
                    this.SendPropertyChanged("style");
                    this.OnstyleChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_type", DbType = "Int")]
        public System.Nullable<int> type
        {
            get
            {
                return this._type;
            }
            set
            {
                if ((this._type != value))
                {
                    this.OntypeChanging(value);
                    this.SendPropertyChanging();
                    this._type = value;
                    this.SendPropertyChanged("type");
                    this.OntypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_points", DbType = "NText", UpdateCheck = UpdateCheck.Never)]
        public string points
        {
            get
            {
                return this._points;
            }
            set
            {
                if ((this._points != value))
                {
                    this.OnpointsChanging(value);
                    this.SendPropertyChanging();
                    this._points = value;
                    this.SendPropertyChanged("points");
                    this.OnpointsChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "x_grid_x_video", Storage = "_x_video", ThisKey = "grid_id", OtherKey = "grid_id")]
        public EntitySet<x_video> x_video
        {
            get
            {
                return this._x_video;
            }
            set
            {
                this._x_video.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "x_grid_x_gps", Storage = "_x_gps", ThisKey = "grid_id", OtherKey = "grid_id")]
        public EntitySet<x_gps> x_gps
        {
            get
            {
                return this._x_gps;
            }
            set
            {
                this._x_gps.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "x_grid_x_pick", Storage = "_x_pick", ThisKey = "grid_id", OtherKey = "grid_id")]
        public EntitySet<x_pick> x_pick
        {
            get
            {
                return this._x_pick;
            }
            set
            {
                this._x_pick.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "x_grid_x_floor", Storage = "_x_floor", ThisKey = "grid_id", OtherKey = "grid_id")]
        public EntitySet<x_floor> x_floor
        {
            get
            {
                return this._x_floor;
            }
            set
            {
                this._x_floor.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "x_grid_x_poi", Storage = "_x_poi", ThisKey = "grid_id", OtherKey = "grid_id")]
        public EntitySet<x_poi> x_poi
        {
            get
            {
                return this._x_poi;
            }
            set
            {
                this._x_poi.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_x_video(x_video entity)
        {
            this.SendPropertyChanging();
            entity.x_grid = this;
        }

        private void detach_x_video(x_video entity)
        {
            this.SendPropertyChanging();
            entity.x_grid = null;
        }

        private void attach_x_gps(x_gps entity)
        {
            this.SendPropertyChanging();
            entity.x_grid = this;
        }

        private void detach_x_gps(x_gps entity)
        {
            this.SendPropertyChanging();
            entity.x_grid = null;
        }

        private void attach_x_pick(x_pick entity)
        {
            this.SendPropertyChanging();
            entity.x_grid = this;
        }

        private void detach_x_pick(x_pick entity)
        {
            this.SendPropertyChanging();
            entity.x_grid = null;
        }

        private void attach_x_floor(x_floor entity)
        {
            this.SendPropertyChanging();
            entity.x_grid = this;
        }

        private void detach_x_floor(x_floor entity)
        {
            this.SendPropertyChanging();
            entity.x_grid = null;
        }

        private void attach_x_poi(x_poi entity)
        {
            this.SendPropertyChanging();
            entity.x_grid = this;
        }

        private void detach_x_poi(x_poi entity)
        {
            this.SendPropertyChanging();
            entity.x_grid = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.x_poi")]
    public partial class x_poi : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _poi_id;

        private System.Nullable<long> _grid_id;

        private string _name;

        private string _img;

        private string _addr;

        private string _tel;

        private System.Nullable<int> _type;

        private string _remark;

        private EntityRef<x_grid> _x_grid;

        #region 可扩展性方法定义
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void Onpoi_idChanging(long value);
        partial void Onpoi_idChanged();
        partial void Ongrid_idChanging(System.Nullable<long> value);
        partial void Ongrid_idChanged();
        partial void OnnameChanging(string value);
        partial void OnnameChanged();
        partial void OnimgChanging(string value);
        partial void OnimgChanged();
        partial void OnaddrChanging(string value);
        partial void OnaddrChanged();
        partial void OntelChanging(string value);
        partial void OntelChanged();
        partial void OntypeChanging(System.Nullable<int> value);
        partial void OntypeChanged();
        partial void OnremarkChanging(string value);
        partial void OnremarkChanged();
        #endregion

        public x_poi()
        {
            this._x_grid = default(EntityRef<x_grid>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_poi_id", AutoSync = AutoSync.OnInsert, DbType = "BigInt NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public long poi_id
        {
            get
            {
                return this._poi_id;
            }
            set
            {
                if ((this._poi_id != value))
                {
                    this.Onpoi_idChanging(value);
                    this.SendPropertyChanging();
                    this._poi_id = value;
                    this.SendPropertyChanged("poi_id");
                    this.Onpoi_idChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_grid_id", DbType = "BigInt")]
        public System.Nullable<long> grid_id
        {
            get
            {
                return this._grid_id;
            }
            set
            {
                if ((this._grid_id != value))
                {
                    if (this._x_grid.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.Ongrid_idChanging(value);
                    this.SendPropertyChanging();
                    this._grid_id = value;
                    this.SendPropertyChanged("grid_id");
                    this.Ongrid_idChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_name", DbType = "NVarChar(260)")]
        public string name
        {
            get
            {
                return this._name;
            }
            set
            {
                if ((this._name != value))
                {
                    this.OnnameChanging(value);
                    this.SendPropertyChanging();
                    this._name = value;
                    this.SendPropertyChanged("name");
                    this.OnnameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_img", DbType = "NVarChar(200)")]
        public string img
        {
            get
            {
                return this._img;
            }
            set
            {
                if ((this._img != value))
                {
                    this.OnimgChanging(value);
                    this.SendPropertyChanging();
                    this._img = value;
                    this.SendPropertyChanged("img");
                    this.OnimgChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_addr", DbType = "NVarChar(200)")]
        public string addr
        {
            get
            {
                return this._addr;
            }
            set
            {
                if ((this._addr != value))
                {
                    this.OnaddrChanging(value);
                    this.SendPropertyChanging();
                    this._addr = value;
                    this.SendPropertyChanged("addr");
                    this.OnaddrChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_tel", DbType = "NVarChar(20)")]
        public string tel
        {
            get
            {
                return this._tel;
            }
            set
            {
                if ((this._tel != value))
                {
                    this.OntelChanging(value);
                    this.SendPropertyChanging();
                    this._tel = value;
                    this.SendPropertyChanged("tel");
                    this.OntelChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_type", DbType = "Int")]
        public System.Nullable<int> type
        {
            get
            {
                return this._type;
            }
            set
            {
                if ((this._type != value))
                {
                    this.OntypeChanging(value);
                    this.SendPropertyChanging();
                    this._type = value;
                    this.SendPropertyChanged("type");
                    this.OntypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_remark", DbType = "NVarChar(400)")]
        public string remark
        {
            get
            {
                return this._remark;
            }
            set
            {
                if ((this._remark != value))
                {
                    this.OnremarkChanging(value);
                    this.SendPropertyChanging();
                    this._remark = value;
                    this.SendPropertyChanged("remark");
                    this.OnremarkChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "x_grid_x_poi", Storage = "_x_grid", ThisKey = "grid_id", OtherKey = "grid_id", IsForeignKey = true)]
        public x_grid x_grid
        {
            get
            {
                return this._x_grid.Entity;
            }
            set
            {
                x_grid previousValue = this._x_grid.Entity;
                if (((previousValue != value)
                            || (this._x_grid.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._x_grid.Entity = null;
                        previousValue.x_poi.Remove(this);
                    }
                    this._x_grid.Entity = value;
                    if ((value != null))
                    {
                        value.x_poi.Add(this);
                        this._grid_id = value.grid_id;
                    }
                    else
                    {
                        this._grid_id = default(Nullable<long>);
                    }
                    this.SendPropertyChanged("x_grid");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }
}
#pragma warning restore 1591
